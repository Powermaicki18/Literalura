package com.example.aluracursos.Literalura.principal;

import com.example.aluracursos.Literalura.model.Idioma;
import com.example.aluracursos.Literalura.service.LibroService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.util.InputMismatchException;
import java.util.Optional;
import java.util.Scanner;

@Component
public class Principal<DatosLibros> {

    @Autowired
    private LibroService libroService;

    private Scanner teclado = new Scanner(System.in);

    public void mostrarMenu() {
        // Verificar que la inyecci√≥n funcione
        if (libroService == null) {
            System.out.println("‚ùå FALLA CR√çTICA: LibroService es null. Spring Boot no est√° funcionando correctamente.");
            return;
        }

        System.out.println("‚úÖ LibroService inyectado correctamente. Iniciando aplicaci√≥n...");
        mostrarBienvenida();

        int opcion = -1;
        while (opcion != 0) {
            mostrarOpciones();
            try {
                opcion = teclado.nextInt();
                teclado.nextLine();

                switch (opcion) {
                    case 1:
                        buscarLibroPorTitulo();
                        break;
                    case 2:
                        libroService.listarLibrosRegistrados();
                        break;
                    case 3:
                        libroService.listarAutoresRegistrados();
                        break;
                    case 4:
                        listarAutoresVivosPorAno();
                        break;
                    case 5:
                        listarLibrosPorIdioma();
                        break;
                    case 6:
                        libroService.generarEstadisticas();
                        break;
                    case 7:
                        libroService.mostrarIdiomasDisponibles();
                        break;
                    case 8:
                        System.out.println("‚ö†Ô∏è Top 10 temporalmente usando estad√≠sticas.");
                        libroService.generarEstadisticas();
                        break;
                    case 0:
                        mostrarDespedida();
                        break;
                    default:
                        System.out.println("‚ùå Opci√≥n inv√°lida.");
                }

                if (opcion != 0) {
                    esperarEnter();
                }

            } catch (InputMismatchException e) {
                System.out.println("‚ùå Por favor ingresa un n√∫mero v√°lido.");
                teclado.nextLine();
                esperarEnter();
            }
        }

        teclado.close();
    }

    private void buscarLibroPorTitulo() {
        System.out.println("\nüîç BUSCAR LIBRO POR T√çTULO");
        System.out.print("üìñ Ingresa el t√≠tulo: ");
        String titulo = teclado.nextLine().trim().toUpperCase();

        if (titulo.isEmpty()) {
            System.out.println("‚ùå El t√≠tulo no puede estar vac√≠o.");
            return;
        }

        libroService.buscarLibroPorTitulo(titulo);
    }

    private void listarAutoresVivosPorAno() {
        System.out.println("\nüïí AUTORES VIVOS EN DETERMINADO A√ëO");
        System.out.print("üìÖ Ingresa el a√±o: ");

        try {
            Integer ano = teclado.nextInt();
            teclado.nextLine();
            libroService.listarAutoresVivosPorAno(ano);
        } catch (InputMismatchException e) {
            System.out.println("‚ùå Por favor ingresa un a√±o v√°lido.");
            teclado.nextLine();
        }
    }

    private void listarLibrosPorIdioma() {
        System.out.println("\nüåê LIBROS POR IDIOMA");
        mostrarIdiomasParaSeleccionar();
        System.out.print("\nüî§ C√≥digo del idioma: ");
        String codigo = teclado.nextLine().trim().toLowerCase();

        try {
            Idioma idioma = Idioma.fromString(codigo);
            libroService.listarLibrosPorIdioma(idioma);
        } catch (IllegalArgumentException e) {
            System.out.println("‚ùå C√≥digo de idioma no v√°lido.");
        }
    }

    private void mostrarBienvenida() {
        System.out.println("\nüìö LITERALURA - Challenge Alura + ONE üìö");
    }

    private void mostrarOpciones() {
        System.out.println("\n========== MEN√ö PRINCIPAL ==========");
        System.out.println("1Ô∏è‚É£ - Buscar libro por t√≠tulo");
        System.out.println("2Ô∏è‚É£ - Listar libros registrados");
        System.out.println("3Ô∏è‚É£ - Listar autores registrados");
        System.out.println("4Ô∏è‚É£ - Autores vivos en determinado a√±o");
        System.out.println("5Ô∏è‚É£ - Libros por idioma");
        System.out.println("6Ô∏è‚É£ - Generar estad√≠sticas");
        System.out.println("7Ô∏è‚É£ - Mostrar idiomas disponibles");
        System.out.println("8Ô∏è‚É£ - Top libros m√°s descargados");
        System.out.println("0Ô∏è‚É£ - Salir");
        System.out.print("\nüîç Selecciona una opci√≥n: ");
    }

    private void mostrarIdiomasParaSeleccionar() {
        System.out.println("\nüìã Idiomas disponibles:");
        System.out.println("es - Espa√±ol | en - Ingl√©s | fr - Franc√©s");
        System.out.println("pt - Portugu√©s | it - Italiano | de - Alem√°n");
    }

    private void esperarEnter() {
        System.out.println("\nüí° Presiona Enter para continuar...");
        try {
            System.in.read();
        } catch (Exception e) {
            // Manejar silenciosamente
        }
    }

    private void mostrarDespedida() {
        System.out.println("\n¬°Gracias por usar LiterAlura! üìö‚ú®");
    }
}